==> To install docker:
$ sudo apt install docker.io


==> To find the version of docker:
$ docker version
$ docker -v


==> To avoid using sudo in all commands:
$ sudo addgroup docker                      // create a user group called docker
$ sudo usermod -aG docker ${USER}           // add the current user in the docker group
Then, logout and login again.





***************************************************************************************************
                                        IMAGES
***************************************************************************************************

==> To get the list of all images:
$ docker images
$ docker image ls


==> To download an image:
$ docker pull hello-docker


==> To DELETE an image:
$ docker rmi hello-docker
$ docker rmi -f $(docker images -aq)    // Delete all images




***************************************************************************************************
                                        CONTAINER
***************************************************************************************************

==> To get the list of all containers:
$ docker ps -a
$ docker container ls -a


==> To START/RUN(create ?) a container from an image (e.g. image name = nginx):
$ docker run --name mycontainer nginx              // this will first pull the image if not present locally
$ docker run -d -p 45045:8080 deepak661/nodejs-app
$ docker run -d -p 6379:6379 --name my-redis-container redis


==> To START/RUN an existing container:
$ docker start -ai 8aa07c50e260          // provide either container_id or name of the container
$ docker start 8aa07c50e260


==> To START/RUN a container in detached mode (this runs a web server in background and we will back to the prompt):
$ docker run -d kodekloud/simple-webapp

          
==> To STOP/KILL a running container:
$ docker stop dd5673adf044              // provide either container_id or name of the container
$ docker stop $(docker ps -aq)      // gracefully stop all running containers
$ docker kill $(docker ps -aq)      // stop all running containers


==> To DELETE/REMOVE a container:
$ docker rm dd5673adf044                    // provide either container_id or name of the container
$ docker rm -f $(docker ps -aq)             // remove all containers 


==> To execute a command in container while starting it:
$ docker run ubuntu sleep 10


==> To start a shell inside a container to execute commands:
$ docker exec -it mycontainer bash                  // this will run the sh shell in the specified container, giving you a basic shell prompt (-t is pseudo terminal)
$ docker exec -it mycontainer sh                    // for sh shell (type and enter 'exit' for exiting)


==> To get all the details of a container:
$ docker inspect 5390f465862b


==> To find internal IP address and port of a container:
$ docker inspect -f '{{ .NetworkSettings.IPAddress }}' 0a626ce14db4
$ docker inspect -f '{{ .NetworkSettings.Ports }}' ee057cb304d1


==> To see the logs of a container:
$ docker logs a1f0ba759d32







***************************************************************************************************
                                        docker-compose
***************************************************************************************************

links: 
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-22-04
https://www.conduktor.io/kafka/how-to-start-kafka-using-docker/
localhost:9092



==> To install docker-compose:
sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)"  -o /usr/local/bin/docker-compose
sudo mv /usr/local/bin/docker-compose /usr/bin/docker-compose
sudo chmod +x /usr/bin/docker-compose


==> To find docker compose version:
$ docker-compose -v
$ docker compose version


==> to run a an .yml file:
$ docker-compose -f zk-single-kafka-single.yml up -d

